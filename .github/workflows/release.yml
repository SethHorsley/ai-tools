name: Build and Release

on:
  push:
    branches:
      - main # or your default branch name

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.create_tag.outputs.new_tag }}
      upload_url: ${{ steps.get_release_url.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"

      - name: Create new tag
        id: create_tag
        uses: anothrNick/github-tag-action@1.61.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          WITH_V: true

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.new_tag }}
          release_name: Release ${{ steps.create_tag.outputs.new_tag }}
          draft: false
          prerelease: false

      - name: Get Release URL
        id: get_release_url
        run: echo "::set-output name=upload_url::${{ steps.create_release.outputs.upload_url }}"

  release:
    needs: build-and-release
    name: Release for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: agg-files
            asset_name: agg-files-linux-x86_64
          - os: macos-13
            artifact_name: agg-files
            asset_name: agg-files-darwin-x86_64
          - os: macos-latest
            artifact_name: agg-files
            asset_name: agg-files-darwin-arm64
          - os: windows-latest
            artifact_name: agg-files.exe
            asset_name: agg-files-windows-x86_64.exe

    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Add ARM64 target (macOS only)
        if: matrix.os == 'macos-latest' && contains(matrix.asset_name, 'arm64')
        run: rustup target add aarch64-apple-darwin

      - name: Build
        working-directory: ./agg-files
        run: |
          if [[ "${{ matrix.asset_name }}" == *"-arm64" ]]; then
            cargo build --release --target aarch64-apple-darwin
          else
            cargo build --release
          fi
        shell: bash

      - name: Prepare binary (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          if [[ "${{ matrix.asset_name }}" == *"-arm64" ]]; then
            cp agg-files/target/aarch64-apple-darwin/release/${{ matrix.artifact_name }} ${{ matrix.asset_name }}
          else
            cp agg-files/target/release/${{ matrix.artifact_name }} ${{ matrix.asset_name }}
          fi
        shell: bash

      - name: Prepare binary (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          Copy-Item agg-files\target\release\${{ matrix.artifact_name }} -Destination ${{ matrix.asset_name }}
        shell: pwsh

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.build-and-release.outputs.upload_url }}
          asset_path: ./${{ matrix.asset_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream

  update-homebrew-formula:
    name: Bump Homebrew formula
    needs: [build-and-release, release]
    runs-on: ubuntu-latest
    steps:
      - uses: mislav/bump-homebrew-formula-action@v3
        with:
          formula-name: agg-files
          homebrew-tap: SethHorsley/homebrew-tap
          base-branch: main
          download-url: https://github.com/${{ github.repository }}/archive/${{ needs.build-and-release.outputs.new_tag }}.tar.gz
          tag-name: ${{ needs.build-and-release.outputs.new_tag }}
        env:
          COMMITTER_TOKEN: ${{ secrets.COMMITTER_TOKEN }}
