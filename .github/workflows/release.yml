name: Build and Release

on:
  push:
    branches:
      - main # or your default branch name

permissions:
  contents: write

jobs:
  bump-version:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.bump_version.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Bump version and push tag
        id: bump_version
        uses: anothrNick/github-tag-action@1.35.0
        env:
          GITHUB_TOKEN: ${{ secrets.COMMITTER_TOKEN }}
          DEFAULT_BUMP: patch
          WITH_V: true

  release:
    needs: bump-version
    name: Release for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: agg-files
            asset_name: agg-files-linux-x86_64
          - os: macos-13
            artifact_name: agg-files
            asset_name: agg-files-darwin-x86_64
          - os: macos-latest
            artifact_name: agg-files
            asset_name: agg-files-darwin-arm64
          - os: windows-latest
            artifact_name: agg-files.exe
            asset_name: agg-files-windows-x86_64.exe

    steps:
      - uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Add ARM64 target (macOS only)
        if: matrix.os == 'macos-latest' && contains(matrix.asset_name, 'arm64')
        run: rustup target add aarch64-apple-darwin

      - name: Build
        working-directory: ./agg-files
        run: |
          if [[ "${{ matrix.asset_name }}" == *"-arm64" ]]; then
            cargo build --release --target aarch64-apple-darwin
          else
            cargo build --release
          fi
        shell: bash

      - name: Prepare binary (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          if [[ "${{ matrix.asset_name }}" == *"-arm64" ]]; then
            cp agg-files/target/aarch64-apple-darwin/release/${{ matrix.artifact_name }} ${{ matrix.asset_name }}
          else
            cp agg-files/target/release/${{ matrix.artifact_name }} ${{ matrix.asset_name }}
          fi
        shell: bash

      - name: Prepare binary (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          Copy-Item agg-files\target\release\${{ matrix.artifact_name }} -Destination ${{ matrix.asset_name }}
        shell: pwsh

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.asset_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ needs.bump-version.outputs.new_tag }}
          release_name: Release ${{ needs.bump-version.outputs.new_tag }}
          overwrite: true
          body: "This is an automated release"

  update-homebrew-formula:
    name: Update Homebrew Formula
    needs: [bump-version, release]
    runs-on: ubuntu-latest
    steps:
      - name: Get release info
        id: get_release
        uses: bruceadams/get-release@v1.2.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set binary URLs
        id: set_urls
        run: |
          echo "INTEL_URL=${{ steps.get_release.outputs.browser_download_url }}/agg-files-darwin-x86_64" >> $GITHUB_OUTPUT
          echo "ARM_URL=${{ steps.get_release.outputs.browser_download_url }}/agg-files-darwin-arm64" >> $GITHUB_OUTPUT

      - uses: mislav/bump-homebrew-formula-action@v3
        with:
          formula-name: agg-files
          formula-path: Formula/agg-files.rb
          homebrew-tap: SethHorsley/homebrew-tap
          base-branch: main
          download-url: https://github.com/SethHorsley/agg-files/archive/refs/tags/${{ needs.bump-version.outputs.new_tag }}.tar.gz
          custom-variable: |
            intel_url=${{ steps.set_urls.outputs.INTEL_URL }}
            arm_url=${{ steps.set_urls.outputs.ARM_URL }}
        env:
          COMMITTER_TOKEN: ${{ secrets.COMMITTER_TOKEN }}
